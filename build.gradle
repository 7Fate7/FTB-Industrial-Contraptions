plugins {
	id "dev.architectury.loom" version "0.11.0-SNAPSHOT"
	id 'maven-publish'
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply from: 'https://files.latmod.com/public/markdown-git-changelog.gradle'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = 17

def ENV = System.getenv()
version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}"
archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
	silentMojangMappingsLicense()

	forge {
		mixinConfigs = [
		]

		dataGen {
			mod project.mod_id
		}

		launches {
			data {
				arg "--existing", file("src/main/resources").absolutePath
			}
		}
	}
}

repositories {
	maven {
		url "https://maven.architectury.dev/"
		content {
			includeGroup "dev.architectury"
			includeGroup "me.shedaniel"
			includeGroup "me.shedaniel.cloth"
		}
	}

	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		url "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
			includeGroup "dev.ftb.mods"
			includeGroup "io.alwa.mods"
		}
	}

	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}

	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
//	mappings loom.officialMojangMappings()

	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.18.2:2022.03.13")
	}

	forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
	modApi("dev.architectury:architectury-forge:${rootProject.architectury_version}")

	modImplementation("me.shedaniel:RoughlyEnoughItems-forge:${rootProject.rei_version}")
//	modCompileOnly("curse.maven:jei-238222:${jei_file}")
//	modImplementation("curse.maven:jei-238222:${jei_file}")

	modImplementation("io.alwa.mods:myrtrees-forge:${rootProject.myrtrees_version}")
	modImplementation("dev.latvian.mods:rhino-forge:${rootProject.rhino_version}")
	modImplementation("dev.latvian.mods:kubejs-forge:${rootProject.kubejs_version}") { transitive = false }
	modImplementation("dev.ftb.mods:ftb-library-forge:${rootProject.ftblibrary_version}") { transitive = false }
	modImplementation("dev.ftb.mods:ftb-teams-forge:${rootProject.ftbteams_version}") { transitive = false }
	modImplementation("dev.ftb.mods:ftb-chunks-forge:${rootProject.ftbchunks_version}") { transitive = false }
//	modRuntimeOnly ("com.sunekaer.mods:ToolKit:2.2.1-build.9999+mc1.18.2") // local

//	modRuntime("curse.maven:ctm-267602:3586556")
	// modRuntime("curse.maven:pipez-443900:3525428")
	// modRuntime("curse.maven:tanky-551182:3542146")
	// modRuntime("curse.maven:refined-storage-243076:3527504")
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

compileJava {
	options.encoding = "UTF-8"
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}

	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

publishing {
	publications {
		mavenForge(MavenPublication) {
			artifactId = rootProject.archivesBaseName
			from components.java
		}
	}

	repositories {
		if (ENV.FTB_MAVEN_TOKEN) {
			maven {
				url "https://maven.ftb.dev/release"
				credentials {
					username = "ftb"
					password = "${ENV.FTB_MAVEN_TOKEN}"
				}
			}
		}

		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/minecraft"
				credentials {
					username = "ftb"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}
	}
}

if (ENV.CURSEFORGE_KEY) {
	curseforge {
		apiKey = ENV.CURSEFORGE_KEY
		project {
			id = project.curseforge_id
			releaseType = project.curseforge_type
			addGameVersion project.minecraft_version
			mainArtifact(remapJar.archivePath)
			relations {
				requiredDependency 'architectury-forge'
				requiredDependency 'myrtrees'
				requiredDependency 'emendatus-enigmatica'
			}
			changelog = getGitChangelog
			changelogType = 'markdown'
		}
	}
}